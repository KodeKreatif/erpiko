#ifndef _SIM_H_
#define _SIM_H_

#include "erpiko/oid.h"
#include <string>
#include <memory>
#include <vector>

namespace Erpiko {

/**
 * Handles SIM data structure (RFC-4683)
 */
class Sim {
  public:

    /**
     * Construct a new SIM
     * @param siiType the OID of the SII
     * @param sii the SII value
     * @param password the user supplied password
     * @param authorityRandom the random bytes generated by RA
     */
    Sim(const ObjectId& hashAlgorithm, const ObjectId& siiType, const std::string sii, const std::string password, const std::vector<unsigned char> authorityRandom);

    /**
     * Exports SIM value to DER format
     * @return vector containing the DER data
     */
    const std::vector<unsigned char> toDer() const;

    /**
     * Gets the pepsi value (the hash) of the SIM
     * @return vector containing the pepsi value
     */
    const std::vector<unsigned char> pepsi() const;

    /**
     * Exports EPEPSI of the SIM to DER format
     * @return vector containing EPEPSI data in DER format
     */
    const std::vector<unsigned char> epepsi() const;

    bool isValid();
    virtual ~Sim();

  private:
    class Impl;
    std::unique_ptr<Impl> impl;
};

} // namespace Erpiko
#endif // _SIM_H_
